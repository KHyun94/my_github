// Generated by Dagger (https://dagger.dev).
package com.kh.my_github.data.datasource;

import com.kh.my_github.data.network.service.TokenService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class TokenRemoteDataSource_Factory implements Factory<TokenRemoteDataSource> {
  private final Provider<TokenService> tokenServiceProvider;

  public TokenRemoteDataSource_Factory(Provider<TokenService> tokenServiceProvider) {
    this.tokenServiceProvider = tokenServiceProvider;
  }

  @Override
  public TokenRemoteDataSource get() {
    return newInstance(tokenServiceProvider.get());
  }

  public static TokenRemoteDataSource_Factory create(Provider<TokenService> tokenServiceProvider) {
    return new TokenRemoteDataSource_Factory(tokenServiceProvider);
  }

  public static TokenRemoteDataSource newInstance(TokenService tokenService) {
    return new TokenRemoteDataSource(tokenService);
  }
}
