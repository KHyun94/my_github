// Generated by Dagger (https://dagger.dev).
package com.kh.my_github.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("com.kh.my_github.di.PublicAccess")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkModule_ProvidePublicOkHttpClientFactory implements Factory<OkHttpClient> {
  @Override
  public OkHttpClient get() {
    return providePublicOkHttpClient();
  }

  public static NetworkModule_ProvidePublicOkHttpClientFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static OkHttpClient providePublicOkHttpClient() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.providePublicOkHttpClient());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvidePublicOkHttpClientFactory INSTANCE = new NetworkModule_ProvidePublicOkHttpClientFactory();
  }
}
